# I can read data from one file and write the results of my data manipulation to another file. this is called file I/O
# (file input/output). let's look at an example. the first code i execute is this:
f = open("output.txt", "w")
# this told Python to open output.txt in "w" mode ("w" stands for "write"). i stored the result of this operation 
# in a file object, f. doing this opens the file in write-mode and prepares Python to send data into the file. if i pass
# "r+" as a second argument instead of "w", i make it possible to read and write in this file.
# i always have to close the file. it's by calling my_file.close(). if you don't, Python won't write to it properly.
# a full example of syntax:
my_list = [i**2 for i in range(1,11)]
my_file = open("output.txt", "r+")
for item in my_list:
    my_file.write(str(item) + "\n") # i'm using .write() method
my_file.close()

# reading from a file:
my_file = open("output.txt", "r")
print my_file.read()
my_file.close()

# if i want to check if an object is closed, i may use f.closed which will return True or False
my_file.closed # will return True since i closed the my_file file
